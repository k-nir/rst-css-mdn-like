# docutils默认读取3个配置文件，分别为:
#     /etc/docutils.conf: 系统范围配置文件，优先级最低
#     ./docutils.conf: 项目范围配置文件，优先级中等
#     ~/.docutils: 用户范围配置文件，优先级最高
# 上述3个配置文件中有重复的条目时，docutils会采用优先级最高的文件中的设置。
# 
# 在Windows中，无论是在powershell下还是cmd下，docutil都无法读取到C:\Users\<user>目录下的.docutils文件，
# 因此无法使用用户范围配置文件。
# Windows中也不存在/etc目录，因此也无法使用系统范围配置文件。
# 所以，在Windows中只能使用项目范围配置文件(将本文件改名为docutils.conf，放到项目目录下)。

# 本设置只对restructuredtext的解析器有效(目前docutils只提供restructureedtext一种解析器)
[restructuredtext parser]

# docutils调用pygments库解析代码块，实现高亮。
# restructuredtext源码中的code directive中的代码被pygments解析成html后，
# 其中词法元素会变成一个个独立的html元素，每个html元素都有标识自己类型的class，
# 在默认设置下，docutils产生的class使用长名，然而pygments生成的css文件是默认使用短class名的，
# 因此，为了使两者匹配，需要将docutils生成的class名设为短名。

# 附: pygments是一种专用于代码高亮的工具，
# 将代码文件或代码文本输入pygments，可以得到一套含有高亮色彩信息的html，latex等格式的输出。
# pygments由4个部分组成:
#     1.lexer -- 词法分析器，识别输入代码中的token，并做出标记。
#     2.filter -- 过滤器，用户可通过过滤器修改lexer输出的token流(例如将所有关键字转换为大写)。
#     3.formatter -- 格式器，将token流转换为指定格式的文件，例如: html, latex, RTF等。
#     4.style -- 风格，决定输出文件中代码的高亮风格(高亮颜色，字体粗细等)，pygments自带多种高亮风格。
#
# docutils输出含有代码的html时，pygments的四个部分情况分别如下:
#     1.lexer -- 根据restructuredtext中代码使用的语言选用相应的lexer。
#     2.filter -- 不使用filter。
#     3.formatter -- 使用html formatter。
#     4.style -- 使用默认风格。
#
# restructuredtext和docutils目前尚未提供直接配置pygment风格的方法，
# 因此，要使docutils输出的html中的代码具有不同风格的高亮，需要通过自定义css。
#
# 可用以下命令将pygments自带的风格导出成css:
#     pygmentize -S material -f html -a pre.code > pygments.css
# 其中，
#     -S 指定风格名，
#     -f 指定formatter，此处指定为html，与html相配的风格格式时css，
#     -a 指定html中代码的外层父元素，code directive在html输出中会变成<pre class="code">元素，
#        因此pygments输出的css中的所有规则都应作用于pre.code的子元素。
# 注:
#     在powershell下，输出时注意选择utf-8编码: | Out-File -Encoding utf8 pygments.css。
syntax-highlight: short

# 设置tab的宽度(空格个数)
tab-width: 4

# 本设置只对html4css1 writer有效
[html4css1 writer]

# 与stylesheet路径有关的选项共有三个，分别为:
#     stylesheet
#     stylesheet-dirs
#     stylesheet-path
# 其中，stylesheet代表一种路径设置方式，stylesheet-dirs和stylesheet-path合在一起形成另一种路径设置方式。
# 
# stylesheet-dirs设置stylesheet的搜索路径，其默认值可以用docutils --help查看;
# 
# stylesheet-path设置stylesheet的路径，docutils会在当前目录，
# 和stylesheet-dirs设置的搜索路径下搜索stylesheet-path中的相对路径;
# 
# stylesheet也设置stylesheet的路径，但独立于stylesheet-dirs和stylesheet-path，
# 即docutils不会在stylesheet-dir中的搜索路径下搜索stylesheet中指定的相对路径，只会在当前目录中搜索相对路径。

# html4css1也会用到html5_polyglot中的css文件，因此需要包括其路径。

# 自定义css的指定既可通过配置文件，也可通过命令行选项。
# 命令行的选项会覆盖配置文件中的配置，因此使用命令行选项时，需要同时指定html4css1.css和自定义css。
stylesheet-dirs: .,
                 C:\Python310\lib\site-packages\docutils\writers\html4css1,
				 C:\Python310\lib\site-packages\docutils\writers\html5_polyglot
				 # 在此添加自定义css文件搜索路径

# 在此添加自定义css文件
stylesheet-path: html4css1.css
				 # 在此添加pygments生成的css